@charset "UTF-8";
/**
 * UW Style
 * Version 1.0.3
 * Maintained by University Marketing, UWâ€“Madison, web@umark.wisc.edu
 */
/* =Reset default browser CSS. Based on work by Eric Meyer: http://meyerweb.com/eric/tools/css/reset/index.html
-------------------------------------------------------------- */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, font, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend, button,
table, caption, tbody, tfoot, thead, tr, th, td {
  border: 0;
  font-family: inherit;
  font-size: 100%;
  font-style: inherit;
  margin: 0;
  /*outline: 0;*/
  padding: 0;
  vertical-align: baseline; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

table {
  /* tables still need 'cellspacing="0"' in the markup */
  border-collapse: separate;
  border-spacing: 0; }

caption, th, td {
  font-weight: normal;
  text-align: left; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: ""; }

blockquote, q {
  quotes: "" ""; }

a img {
  border: 0; }

/**
   * Correct `block` display not defined for any HTML5 element in IE 8/9.
   * Correct `block` display not defined for `details` or `summary` in IE 10/11
   * and Firefox.
   * Correct `block` display not defined for `main` in IE 11.
   */
article, aside, details, figcaption, figure,
footer, header, hgroup, main, menu, nav, section, main, summary {
  display: block; }

button {
  cursor: pointer; }

img {
  max-width: 100%;
  height: auto; }

.spell-out {
  speak: spell-out; }

* {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box; }

body {
  color: #494949;
  font-family: "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 400;
  line-height: 1.625;
  position: relative;
  background-color: #fff; }
  body.uw-white-bg {
    background-color: #fff; }
  body.uw-light-gray-bg {
    background-color: #f7f7f7; }

abbr[title], acronym[title] {
  border-bottom: none;
  text-decoration: none;
  color: currentColor; }

p, li {
  font-size: 18px;
  font-size: 1.125rem;
  margin-bottom: 24px;
  margin-bottom: 1.5rem; }

.uw-body p a, .uw-body li a, .uw-body dd a {
  border-bottom: 1px solid currentColor; }

a {
  color: #0479a8;
  text-decoration: none; }

h1, h2, h3, h4, h5, h6 {
  text-transform: uppercase; }

.uw-no-case-transform {
  text-transform: none; }

h1, h2 {
  font-weight: 800; }

h1 {
  font-size: 24px;
  font-size: 1.5rem;
  -webkit-font-smoothing: antialiased; }

h2 {
  font-size: 20px;
  font-size: 1.3rem;
  margin-top: 32px;
  margin-top: 2rem;
  margin-bottom: 16px;
  margin-bottom: 1rem;
  line-height: 1.4; }

h3 {
  font-size: 18px;
  font-size: 1.125rem;
  margin-top: 28px;
  margin-top: 1.8rem;
  margin-bottom: 14px;
  margin-bottom: .9rem;
  line-height: 1.4; }

h4, h5, h6 {
  font-size: 16px;
  font-size: 1rem;
  margin-top: 28px;
  margin-top: 1.8rem;
  line-height: 1.4;
  text-transform: none; }

h5 {
  font-size: 14px;
  font-size: .925rem; }

h6 {
  font-size: 13px;
  font-size: .85rem; }

.small-gray-heading {
  font-size: 18px;
  font-size: 1.125rem;
  color: #8e8e92;
  margin: 32px 0 16px 0;
  margin: 2rem 0 1rem 0; }

@media screen and (min-width: 40em) {
  h1 {
    font-size: 32px;
    font-size: 2rem; }
  h2 {
    font-size: 25px;
    font-size: 1.6rem; } }

h2 + ul {
  margin-top: 16px;
  margin-top: 1rem; }

ul, ol {
  margin-left: 19px;
  margin-left: 1.2rem; }
  ul li ul, ul li ol, ol li ul, ol li ol {
    margin-top: 24px;
    margin-top: 1.5rem;
    margin-left: 38px;
    margin-left: 2.4rem; }

ul {
  list-style: disc; }

ol {
  list-style: decimal; }

ol ol {
  list-style: lower-alpha; }

ol ol ol {
  list-style: lower-roman; }

ol ol ol ol {
  list-style: decimal; }

.uw-list-tight {
  margin-top: -16px;
  margin-top: -1rem; }

.uw-list-tight li {
  margin-bottom: 0; }

.uw-list-no_bullets {
  margin-left: 0;
  list-style: none; }

.uw-list-multi_column {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .uw-list-multi_column li {
    -webkit-flex-basis: 100%;
        -ms-flex-preferred-size: 100%;
            flex-basis: 100%;
    max-width: 100%; }
  @media screen and (min-width: 37.5em) {
    .uw-list-multi_column li {
      -webkit-flex-basis: 50%;
          -ms-flex-preferred-size: 50%;
              flex-basis: 50%;
      max-width: 50%;
      padding-right: 48px;
      padding-right: 3rem; } }
  @media screen and (min-width: 56.25em) {
    .uw-list-multi_column li {
      -webkit-flex-basis: 33.333333%;
          -ms-flex-preferred-size: 33.333333%;
              flex-basis: 33.333333%;
      max-width: 33.333333%; } }
  @media screen and (min-width: 75em) {
    .uw-list-multi_column li {
      -webkit-flex-basis: 25%;
          -ms-flex-preferred-size: 25%;
              flex-basis: 25%;
      max-width: 25%; } }

.uw-list-inline {
  display: inline;
  list-style: none;
  margin-left: 0; }
  .uw-list-inline li {
    display: inline; }
    .uw-list-inline li:before {
      content: "\00b7";
      padding: 0 8px;
      padding: 0 0.5rem; }
    .uw-list-inline li:first-child:before {
      content: "";
      padding: 0; }

dl {
  margin: 0; }
  dl dd, dl dt {
    font-size: 18px;
    font-size: 1.125rem; }
  dl dt {
    font-weight: bold; }
  dl dd {
    margin-bottom: 24px;
    margin-bottom: 1.5rem; }

cite, em, i {
  font-style: italic; }

b, strong {
  font-weight: bold; }

td, th, caption {
  font-size: 18px;
  font-size: 1.125rem; }

blockquote {
  font-family: Georgia, Times New Roman, Times, serif;
  -webkit-font-smoothing: auto;
  font-style: italic;
  font-size: 20px;
  font-size: 1.25rem;
  padding-left: 24px;
  padding-left: 1.5rem;
  margin-bottom: 32px;
  margin-bottom: 2rem;
  border-left: 4px solid #c5050c;
  border-left: 0.25rem solid #c5050c; }
  blockquote cite, blockquote + cite {
    font-style: normal;
    font: 14px "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
    font: 0.9rem "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
    text-transform: uppercase;
    margin: 16px 0 0 24px;
    margin: 1rem 0 0 1.5rem;
    display: block; }
    blockquote cite:before, blockquote + cite:before {
      content: "\2014"; }
  blockquote cite {
    margin-left: 0; }
  blockquote p {
    font-size: 20px;
    font-size: 1.25rem; }
  blockquote.uw-stylized-quote {
    font-family: "Vitesse", "Helvetica Neue", "Helvetica", "Arial";
    margin-bottom: 0;
    border-left: none;
    padding-left: 0;
    text-align: center; }
    blockquote.uw-stylized-quote p {
      font-family: "Vitesse", "Helvetica Neue", "Helvetica", "Arial";
      font-size: 17px;
      font-size: 1.1rem; }
      blockquote.uw-stylized-quote p:last-of-type {
        margin-bottom: 8px;
        margin-bottom: .5rem; }
    blockquote.uw-stylized-quote cite {
      text-align: center; }
  blockquote.uw-mini-bar-center {
    margin-top: 32px;
    margin-top: 2rem; }
    blockquote.uw-mini-bar-center:before {
      margin-top: -16px;
      margin-top: -1rem;
      height: 6px;
      width: 48px;
      width: 3rem; }
  @media screen and (min-width: 0em) and (max-width: 39.9375em) {
    blockquote.uw-mini-bar-center {
      margin-top: 32px;
      margin-top: 2rem; } }

blockquote em, blockquote i, blockquote cite {
  font-style: normal; }

address {
  display: block;
  margin: 0 0 1.625em; }

pre {
  background: #f4f4f4;
  font: 13px "Courier 10 Pitch", Courier, monospace;
  line-height: 1.5;
  margin-bottom: 1.625em;
  overflow: auto;
  padding: 0.75em 1.625em; }

code, kbd, samp, var {
  font: 13px Monaco, Consolas, "Andale Mono", "DejaVu Sans Mono", monospace; }

ins {
  background: #fff9c0;
  text-decoration: none; }

sup,
sub {
  font-size: 14px;
  font-size: .9rem;
  height: 0;
  line-height: 1;
  position: relative;
  vertical-align: baseline; }

sup {
  bottom: 1ex; }

sub {
  top: .5ex; }

q:before {
  content: "\201C"; }

q:after {
  content: "\201D"; }

.uw-double-size-text {
  font-size: 27px;
  font-size: 1.7rem;
  line-height: 1.5; }

.uw-small-text {
  font-size: 14px;
  font-size: .9rem; }

.uw-smaller-text {
  font-size: 12px;
  font-size: .8rem; }

@media screen and (min-width: 40em) {
  .uw-double-size-text {
    font-size: 32px;
    font-size: 2rem;
    line-height: 1.625; } }

.uw-more-link {
  text-transform: uppercase;
  font-size: 13px;
  font-size: 0.8125rem;
  font-weight: 800; }
  .uw-more-link.uw-more-link-black {
    color: #282728; }

.uw-more-link svg {
  width: 12px;
  width: .75rem;
  height: 12px;
  height: .75rem;
  vertical-align: -0px;
  vertical-align: -0.05rem;
  margin-left: -1px;
  margin-left: -.1rem;
  fill: #c5050c; }

.uw-gray-med-bg {
  background-color: #8e8e92; }

.uw-greyblue-bg {
  background-color: #dadfe1; }

.uw-white-bg {
  background-color: white; }

.uw-light-grer-bg {
  background-color: #f7f7f7; }

.uw-red-bg {
  background-color: #c5050c; }

.uw-red-bg, .uw-gray-med-bg {
  color: white; }
  .uw-red-bg p, .uw-red-bg li, .uw-red-bg blockquote, .uw-red-bg a, .uw-red-bg a.uw-more-link, .uw-red-bg dd, .uw-red-bg dt, .uw-red-bg abbr, .uw-red-bg acronym, .uw-red-bg cite, .uw-red-bg strong, .uw-gray-med-bg p, .uw-gray-med-bg li, .uw-gray-med-bg blockquote, .uw-gray-med-bg a, .uw-gray-med-bg a.uw-more-link, .uw-gray-med-bg dd, .uw-gray-med-bg dt, .uw-gray-med-bg abbr, .uw-gray-med-bg acronym, .uw-gray-med-bg cite, .uw-gray-med-bg strong {
    color: white !important; }
  .uw-red-bg svg, .uw-gray-med-bg svg {
    fill: white; }
  .uw-red-bg blockquote, .uw-gray-med-bg blockquote {
    font-weight: 500; }
  .uw-red-bg a.uw-more-link, .uw-gray-med-bg a.uw-more-link {
    color: white; }

.uw-nowrap {
  white-space: nowrap; }

.uw-text-center {
  text-align: center; }

.uw-text-left {
  text-align: left; }

.uw-text-right {
  text-align: right; }

@media screen and (min-width: 40em) {
  .uw-pad-xs {
    padding: 4px;
    padding: 0.25rem; }
  .uw-pad-t-xs {
    padding-top: 4px;
    padding-top: 0.25rem; }
  .uw-pad-b-xs {
    padding-bottom: 4px;
    padding-bottom: 0.25rem; }
  .uw-pad-l-xs {
    padding-left: 4px;
    padding-left: 0.25rem; }
  .uw-pad-r-xs {
    padding-right: 4px;
    padding-right: 0.25rem; }
  .uw-pad-tb-xs {
    padding-top: 4px;
    padding-top: 0.25rem;
    padding-bottom: 4px;
    padding-bottom: 0.25rem; }
  .uw-mg-xs {
    margin: 4px;
    margin: 0.25rem; }
  .uw-mg-t-xs {
    margin-top: 4px;
    margin-top: 0.25rem; }
  .uw-mg-b-xs {
    margin-bottom: 4px;
    margin-bottom: 0.25rem; }
  .uw-mg-l-xs {
    margin-left: 4px;
    margin-left: 0.25rem; }
  .uw-mg-r-xs {
    margin-right: 4px;
    margin-right: 0.25rem; }
  .uw-mg-tb-xs {
    margin-top: 4px;
    margin-top: 0.25rem;
    margin-bottom: 4px;
    margin-bottom: 0.25rem; } }

@media screen and (min-width: 40em) {
  .uw-pad-s {
    padding: 8px;
    padding: 0.5rem; }
  .uw-pad-t-s {
    padding-top: 8px;
    padding-top: 0.5rem; }
  .uw-pad-b-s {
    padding-bottom: 8px;
    padding-bottom: 0.5rem; }
  .uw-pad-l-s {
    padding-left: 8px;
    padding-left: 0.5rem; }
  .uw-pad-r-s {
    padding-right: 8px;
    padding-right: 0.5rem; }
  .uw-pad-tb-s {
    padding-top: 8px;
    padding-top: 0.5rem;
    padding-bottom: 8px;
    padding-bottom: 0.5rem; }
  .uw-mg-s {
    margin: 8px;
    margin: 0.5rem; }
  .uw-mg-t-s {
    margin-top: 8px;
    margin-top: 0.5rem; }
  .uw-mg-b-s {
    margin-bottom: 8px;
    margin-bottom: 0.5rem; }
  .uw-mg-l-s {
    margin-left: 8px;
    margin-left: 0.5rem; }
  .uw-mg-r-s {
    margin-right: 8px;
    margin-right: 0.5rem; }
  .uw-mg-tb-s {
    margin-top: 8px;
    margin-top: 0.5rem;
    margin-bottom: 8px;
    margin-bottom: 0.5rem; } }

@media screen and (min-width: 40em) {
  .uw-pad-m {
    padding: 16px;
    padding: 1rem; }
  .uw-pad-t-m {
    padding-top: 16px;
    padding-top: 1rem; }
  .uw-pad-b-m {
    padding-bottom: 16px;
    padding-bottom: 1rem; }
  .uw-pad-l-m {
    padding-left: 16px;
    padding-left: 1rem; }
  .uw-pad-r-m {
    padding-right: 16px;
    padding-right: 1rem; }
  .uw-pad-tb-m {
    padding-top: 16px;
    padding-top: 1rem;
    padding-bottom: 16px;
    padding-bottom: 1rem; }
  .uw-mg-m {
    margin: 16px;
    margin: 1rem; }
  .uw-mg-t-m {
    margin-top: 16px;
    margin-top: 1rem; }
  .uw-mg-b-m {
    margin-bottom: 16px;
    margin-bottom: 1rem; }
  .uw-mg-l-m {
    margin-left: 16px;
    margin-left: 1rem; }
  .uw-mg-r-m {
    margin-right: 16px;
    margin-right: 1rem; }
  .uw-mg-tb-m {
    margin-top: 16px;
    margin-top: 1rem;
    margin-bottom: 16px;
    margin-bottom: 1rem; } }

.uw-pad-l {
  padding: 16px;
  padding: 1rem; }

.uw-pad-t-l {
  padding-top: 16px;
  padding-top: 1rem; }

.uw-pad-b-l {
  padding-bottom: 16px;
  padding-bottom: 1rem; }

.uw-pad-l-l {
  padding-left: 16px;
  padding-left: 1rem; }

.uw-pad-r-l {
  padding-right: 16px;
  padding-right: 1rem; }

.uw-pad-tb-l {
  padding-top: 16px;
  padding-top: 1rem;
  padding-bottom: 16px;
  padding-bottom: 1rem; }

.uw-mg-l {
  margin: 16px;
  margin: 1rem; }

.uw-mg-t-l {
  margin-top: 16px;
  margin-top: 1rem; }

.uw-mg-b-l {
  margin-bottom: 16px;
  margin-bottom: 1rem; }

.uw-mg-l-l {
  margin-left: 16px;
  margin-left: 1rem; }

.uw-mg-r-l {
  margin-right: 16px;
  margin-right: 1rem; }

.uw-mg-tb-l {
  margin-top: 16px;
  margin-top: 1rem;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

@media screen and (min-width: 40em) {
  .uw-pad-l {
    padding: 32px;
    padding: 2rem; }
  .uw-pad-t-l {
    padding-top: 32px;
    padding-top: 2rem; }
  .uw-pad-b-l {
    padding-bottom: 32px;
    padding-bottom: 2rem; }
  .uw-pad-l-l {
    padding-left: 32px;
    padding-left: 2rem; }
  .uw-pad-r-l {
    padding-right: 32px;
    padding-right: 2rem; }
  .uw-pad-tb-l {
    padding-top: 32px;
    padding-top: 2rem;
    padding-bottom: 32px;
    padding-bottom: 2rem; }
  .uw-mg-l {
    margin: 32px;
    margin: 2rem; }
  .uw-mg-t-l {
    margin-top: 32px;
    margin-top: 2rem; }
  .uw-mg-b-l {
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .uw-mg-l-l {
    margin-left: 32px;
    margin-left: 2rem; }
  .uw-mg-r-l {
    margin-right: 32px;
    margin-right: 2rem; }
  .uw-mg-tb-l {
    margin-top: 32px;
    margin-top: 2rem;
    margin-bottom: 32px;
    margin-bottom: 2rem; } }

.uw-pad-xl {
  padding: 32px;
  padding: 2rem; }

.uw-pad-t-xl {
  padding-top: 32px;
  padding-top: 2rem; }

.uw-pad-b-xl {
  padding-bottom: 32px;
  padding-bottom: 2rem; }

.uw-pad-l-xl {
  padding-left: 32px;
  padding-left: 2rem; }

.uw-pad-r-xl {
  padding-right: 32px;
  padding-right: 2rem; }

.uw-pad-tb-xl {
  padding-top: 32px;
  padding-top: 2rem;
  padding-bottom: 32px;
  padding-bottom: 2rem; }

.uw-mg-xl {
  margin: 32px;
  margin: 2rem; }

.uw-mg-t-xl {
  margin-top: 32px;
  margin-top: 2rem; }

.uw-mg-b-xl {
  margin-bottom: 32px;
  margin-bottom: 2rem; }

.uw-mg-l-xl {
  margin-left: 32px;
  margin-left: 2rem; }

.uw-mg-r-xl {
  margin-right: 32px;
  margin-right: 2rem; }

.uw-mg-tb-xl {
  margin-top: 32px;
  margin-top: 2rem;
  margin-bottom: 32px;
  margin-bottom: 2rem; }

@media screen and (min-width: 40em) {
  .uw-pad-xl {
    padding: 64px;
    padding: 4rem; }
  .uw-pad-t-xl {
    padding-top: 64px;
    padding-top: 4rem; }
  .uw-pad-b-xl {
    padding-bottom: 64px;
    padding-bottom: 4rem; }
  .uw-pad-l-xl {
    padding-left: 64px;
    padding-left: 4rem; }
  .uw-pad-r-xl {
    padding-right: 64px;
    padding-right: 4rem; }
  .uw-pad-tb-xl {
    padding-top: 64px;
    padding-top: 4rem;
    padding-bottom: 64px;
    padding-bottom: 4rem; }
  .uw-mg-xl {
    margin: 64px;
    margin: 4rem; }
  .uw-mg-t-xl {
    margin-top: 64px;
    margin-top: 4rem; }
  .uw-mg-b-xl {
    margin-bottom: 64px;
    margin-bottom: 4rem; }
  .uw-mg-l-xl {
    margin-left: 64px;
    margin-left: 4rem; }
  .uw-mg-r-xl {
    margin-right: 64px;
    margin-right: 4rem; }
  .uw-mg-tb-xl {
    margin-top: 64px;
    margin-top: 4rem;
    margin-bottom: 64px;
    margin-bottom: 4rem; } }

.uw-pad-xxl {
  padding: 64px;
  padding: 4rem; }

.uw-pad-t-xxl {
  padding-top: 64px;
  padding-top: 4rem; }

.uw-pad-b-xxl {
  padding-bottom: 64px;
  padding-bottom: 4rem; }

.uw-pad-l-xxl {
  padding-left: 64px;
  padding-left: 4rem; }

.uw-pad-r-xxl {
  padding-right: 64px;
  padding-right: 4rem; }

.uw-pad-tb-xxl {
  padding-top: 64px;
  padding-top: 4rem;
  padding-bottom: 64px;
  padding-bottom: 4rem; }

.uw-mg-xxl {
  margin: 64px;
  margin: 4rem; }

.uw-mg-t-xxl {
  margin-top: 64px;
  margin-top: 4rem; }

.uw-mg-b-xxl {
  margin-bottom: 64px;
  margin-bottom: 4rem; }

.uw-mg-l-xxl {
  margin-left: 64px;
  margin-left: 4rem; }

.uw-mg-r-xxl {
  margin-right: 64px;
  margin-right: 4rem; }

.uw-mg-tb-xxl {
  margin-top: 64px;
  margin-top: 4rem;
  margin-bottom: 64px;
  margin-bottom: 4rem; }

@media screen and (min-width: 40em) {
  .uw-pad-xxl {
    padding: 128px;
    padding: 8rem; }
  .uw-pad-t-xxl {
    padding-top: 128px;
    padding-top: 8rem; }
  .uw-pad-b-xxl {
    padding-bottom: 128px;
    padding-bottom: 8rem; }
  .uw-pad-l-xxl {
    padding-left: 128px;
    padding-left: 8rem; }
  .uw-pad-r-xxl {
    padding-right: 128px;
    padding-right: 8rem; }
  .uw-pad-tb-xxl {
    padding-top: 128px;
    padding-top: 8rem;
    padding-bottom: 128px;
    padding-bottom: 8rem; }
  .uw-mg-xxl {
    margin: 128px;
    margin: 8rem; }
  .uw-mg-t-xxl {
    margin-top: 128px;
    margin-top: 8rem; }
  .uw-mg-b-xxl {
    margin-bottom: 128px;
    margin-bottom: 8rem; }
  .uw-mg-l-xxl {
    margin-left: 128px;
    margin-left: 8rem; }
  .uw-mg-r-xxl {
    margin-right: 128px;
    margin-right: 8rem; }
  .uw-mg-tb-xxl {
    margin-top: 128px;
    margin-top: 8rem;
    margin-bottom: 128px;
    margin-bottom: 8rem; } }

@media screen and (max-width: 62.5em) {
  .uw-pad-tb-none-sm {
    padding-top: 0;
    padding-bottom: 0; }
  .uw-pad-t-none-sm {
    padding-top: 0; }
  .uw-pad-b-none-sm {
    padding-bottom: 0; } }

.uw-show-for-sr-only, .uw-sr-only {
  position: absolute !important;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0); }

.uw-show-on-focus {
  position: absolute;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0); }
  .uw-show-on-focus:focus {
    position: static;
    height: auto;
    width: auto;
    overflow: visible;
    clip: auto; }

#uw-skip-link {
  position: absolute !important;
  z-index: 40;
  color: #0479a8;
  padding: 4px;
  padding: .3rem;
  background-color: #fff; }

.uw-flex-reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
     -moz-box-orient: horizontal;
     -moz-box-direction: reverse;
      -ms-flex-direction: row-reverse;
          flex-direction: row-reverse; }

.uw-clearfix::before, .uw-clearfix::after {
  content: ' ';
  display: table; }

.uw-clearfix::after {
  clear: both; }

.uw-hero {
  line-height: .5; }
  .uw-hero img {
    width: 100%; }
  @media screen and (min-width: 75em) {
    .uw-hero.uw-hero-constrained-height img {
      object-fit: cover;
      object-position: 100% 100%;
      max-height: 300px; } }

.uw-float-right {
  float: right; }

.uw-float-left {
  float: left; }

figure {
  margin: 0 auto 16px;
  margin: 0 auto 1rem; }
  figure.uw-float-right, figure.uw-float-left {
    float: none; }
  @media screen and (min-width: 31.25em) {
    figure {
      margin: 0; }
      figure.uw-float-right {
        float: right;
        margin: 8px 0 32px 32px;
        margin: 0.5rem 0 2rem 2rem; }
      figure.uw-float-left {
        float: left;
        margin: 8px 32px 32px 0;
        margin: 0.5rem 2rem 2rem 0; }
      figure.uw-float-25 {
        width: 25%; }
      figure.uw-float-33 {
        width: 33.3333%; }
      figure.uw-float-50 {
        width: 50%; } }

figure img {
  border: 1px solid #cfcfcf; }
  figure img.uw-no-border {
    border: none; }

figure figcaption {
  font-size: 16px;
  font-size: 1rem;
  font-family: "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
  line-height: 1.4; }

.uw-credit {
  text-transform: uppercase;
  color: #646569;
  font-size: 12px;
  font-size: 0.8rem; }

.uw-content-box {
  background-color: #fff;
  border-bottom: 4px solid #c5050c;
  padding: 24px 32px 24px 32px;
  padding: 1.5rem 2rem 1.5rem 2rem;
  background-color: #f2f2f2; }
  @media screen and (min-width: 40em) {
    .uw-content-box {
      border-right: 1px solid #cfcfcf; } }
  .uw-content-box.uw-content-box-bleed {
    padding: 0 0 24px 0;
    padding: 0 0 1.5rem 0; }
    .uw-content-box.uw-content-box-bleed > * {
      padding-left: 32px;
      padding-left: 2rem;
      padding-right: 32px;
      padding-right: 2rem; }
    .uw-content-box.uw-content-box-bleed > .bleed {
      padding-left: 0;
      padding-right: 0; }
  .uw-content-box + .uw-content-box {
    margin-top: 48px;
    margin-top: 3rem; }

body.uw-light-gray-bg .uw-content-box {
  background-color: #fff; }

.uw-mini-bar {
  position: relative;
  margin-top: 35px;
  margin-top: 2.2rem; }
  .uw-mini-bar:before {
    position: absolute;
    left: 0;
    height: 4px;
    content: '';
    width: 32px;
    width: 2rem;
    top: -12px;
    background-color: #c5050c; }

h1.uw-mini-bar:before {
  height: 4px;
  width: 48px;
  width: 3rem; }

.uw-mini-bar-center {
  position: relative;
  margin-top: 35px;
  margin-top: 2.2rem; }
  .uw-mini-bar-center:before {
    position: absolute;
    left: 0;
    height: 4px;
    content: '';
    width: 32px;
    width: 2rem;
    top: -12px;
    background-color: #c5050c;
    right: 0;
    margin: 0 auto; }

.uw-mini-bar-white {
  position: relative;
  margin-top: 35px;
  margin-top: 2.2rem; }
  .uw-mini-bar-white:before {
    position: absolute;
    left: 0;
    height: 4px;
    content: '';
    width: 32px;
    width: 2rem;
    top: -12px;
    background-color: white; }

.uw-mini-bar-white-center {
  position: relative;
  margin-top: 35px;
  margin-top: 2.2rem; }
  .uw-mini-bar-white-center:before {
    position: absolute;
    left: 0;
    height: 4px;
    content: '';
    width: 32px;
    width: 2rem;
    top: -12px;
    background-color: white;
    right: 0;
    margin: 0 auto; }

.uw-global-bar {
  -webkit-font-smoothing: antialiased;
  background-color: #c5050c;
  color: white;
  padding: 0 16px;
  padding: 0 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
     -moz-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  text-transform: uppercase;
  font-size: 13px;
  font-size: .825rem;
  font-weight: 700; }
  .uw-global-bar.uw-global-bar-inverse {
    background-color: white;
    border-bottom: 1px solid #cfcfcf;
    position: relative;
    z-index: 10; }
    .uw-global-bar.uw-global-bar-inverse a, .uw-global-bar.uw-global-bar-inverse a:visited, .uw-global-bar.uw-global-bar-inverse a:active, .uw-global-bar.uw-global-bar-inverse a:hover {
      color: #646569; }

.uw-global-name-link {
  color: white;
  line-height: 35px;
  line-height: 2.2rem; }
  .uw-global-name-link:hover, .uw-global-name-link:visited, .uw-global-name-link:active {
    text-decoration: none; }
  .uw-global-name-link span {
    display: none; }
  .uw-global-name-link .uw-of {
    text-transform: none; }
  @media screen and (min-width: 17.5em) {
    .uw-global-name-link span {
      display: inline; } }

.uw-header {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
     -moz-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  background-color: white; }
  .uw-header.uw-has-search .uw-header-crest-title {
    width: auto;
    width: 100%; }
    @media screen and (min-width: 31.25em) {
      .uw-header.uw-has-search .uw-header-crest-title {
        width: 70%;
        padding-right: 5%; } }
    @media screen and (min-width: 40em) {
      .uw-header.uw-has-search .uw-header-crest-title {
        width: 75%;
        padding-right: 5%; } }
  .uw-header.uw-has-search .uw-header-search {
    padding-right: 16px;
    padding-right: 1rem; }
    @media screen and (min-width: 31.25em) {
      .uw-header.uw-has-search .uw-header-search {
        width: 30%; } }
    @media screen and (min-width: 40em) {
      .uw-header.uw-has-search .uw-header-search {
        width: 25%; } }

.uw-header-container {
  padding: 16px 0;
  padding: 1rem 0;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 100%;
     -moz-box-flex: 0;
      -ms-flex: 0 0 100%;
          flex: 0 0 100%;
  max-width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
     -moz-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  position: relative; }
  @media screen and (min-width: 40em) {
    .uw-header-container {
      max-width: 62.5em; } }

.uw-header-crest-title {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
     -moz-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
     -moz-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  padding-left: 16px;
  padding-left: 1rem;
  padding-right: 16px;
  padding-right: 1rem; }

.uw-header-crest {
  -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
          flex-basis: auto;
  margin-right: 8px;
  margin-right: .5rem; }

.uw-crest-svg {
  width: 40px;
  width: 2.5rem; }

.uw-title-tagline {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%; }

.uw-site-title {
  -webkit-font-smoothing: antialiased;
  font-weight: 800;
  text-transform: uppercase;
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.1;
  margin-bottom: 1px;
  margin-bottom: .1rem; }
  .uw-site-title a {
    color: #c5050c; }
    .uw-site-title a:hover {
      text-decoration: none; }

.uw-site-tagline {
  font-size: 15px;
  font-size: .95rem;
  font-weight: 700;
  color: #646569;
  text-transform: none;
  margin: 3px 0 0 1px;
  margin: .2rem 0 0 .1rem;
  line-height: 1.2; }

.uw-search-form {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex; }

.uw-search-input[type="text"] {
  -webkit-box-flex: 1;
  -webkit-flex: 1 1 80%;
     -moz-box-flex: 1;
      -ms-flex: 1 1 80%;
          flex: 1 1 80%;
  max-width: 80%; }

.uw-search-submit {
  width: 40px;
  width: 2.5rem;
  height: 40px;
  height: 2.5rem;
  background-color: #c5050c;
  -webkit-box-flex: 0;
  -webkit-flex: 0 0 auto;
     -moz-box-flex: 0;
      -ms-flex: 0 0 auto;
          flex: 0 0 auto; }
  .uw-search-submit svg {
    width: 19px;
    width: 1.2rem;
    height: 19px;
    height: 1.2rem;
    fill: white; }

.uw-header-search .uw-search-form {
  margin-top: 8px;
  margin-top: 0.5rem; }

li.uw-search-list-item form {
  margin-top: 0;
  margin-bottom: 0;
  padding: 12px 16px;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid #cfcfcf;
  text-align: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
     -moz-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center; }

li.uw-search-list-item .uw-search-input[type="text"] {
  float: none;
  width: 100%;
  max-width: 400px;
  -webkit-transition: none;
  transition: none; }

@media screen and (min-width: 27.5em) {
  .uw-site-title {
    font-size: 24px;
    font-size: 1.5rem; } }

@media screen and (min-width: 40em) {
  .uw-header-crest {
    margin-right: 12px;
    margin-right: .8rem; }
    .uw-header-crest img {
      width: 41px;
      width: 2.6rem; }
  .uw-site-title {
    font-size: 27px;
    font-size: 1.7rem; }
  .uw-site-tagline {
    margin: -1px 0 0 3px;
    margin: -.1rem 0 0 .2rem; } }

@media screen and (min-width: 64em) {
  .uw-header-crest img {
    width: 44px;
    width: 2.8rem; }
  .uw-site-title {
    font-size: 28px;
    font-size: 1.8rem; }
  .uw-header-search .uw-search-form {
    margin-top: 16px;
    margin-top: 1rem; } }

@media screen and (min-width: 75em) {
  .uw-header-crest img {
    width: 48px;
    width: 3rem; }
  .uw-site-title {
    font-size: 32px;
    font-size: 2rem; } }

.uw-mobile-menu-button-bar {
  display: none;
  width: 100%;
  background-color: #c5050c;
  border: 0;
  padding: 17px 16px 17px 16px;
  padding: 1.1rem 1rem 1.1rem 1rem;
  color: #fff;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 16px;
  font-size: 1rem;
  line-height: 16px;
  line-height: 1rem; }
  .uw-mobile-menu-button-bar.uw-is-visible {
    display: block; }
  .uw-mobile-menu-button-bar:focus {
    outline: none; }
  .uw-mobile-menu-button-bar svg {
    width: 19px;
    width: 1.2rem;
    height: 19px;
    height: 1.2rem;
    vertical-align: middle;
    margin-top: -4px;
    margin-top: -.3rem;
    margin-left: 11px;
    margin-left: .7rem;
    fill: #fff; }
    .uw-mobile-menu-button-bar svg:last-child {
      display: inline; }
  .uw-mobile-menu-button-bar[aria-expanded="true"] svg {
    display: none; }
    .uw-mobile-menu-button-bar[aria-expanded="true"] svg:last-child {
      display: inline; }
  .uw-mobile-menu-button-bar[aria-expanded="false"] svg {
    display: inline; }
    .uw-mobile-menu-button-bar[aria-expanded="false"] svg:last-child {
      display: none; }
  .uw-mobile-menu-button-bar.uw-mobile-menu-button-bar-reversed {
    background-color: #fff;
    color: #282728;
    border-top: 1px solid #cfcfcf;
    border-bottom: 1px solid #cfcfcf; }
    .uw-mobile-menu-button-bar.uw-mobile-menu-button-bar-reversed svg {
      fill: #282728; }

.no-js #uw-top-menus.uw-is-visible.uw-hidden {
  display: block;
  visibility: visible; }

#uw-top-menus {
  display: none; }
  #uw-top-menus.uw-is-visible {
    display: block; }
    #uw-top-menus.uw-is-visible.uw-hidden {
      visibility: hidden; }
  #uw-top-menus .uw-nav-menu a {
    display: inline-block;
    font-size: 14px;
    font-size: .925rem;
    font-weight: 800;
    line-height: 1.25;
    color: white;
    text-transform: uppercase;
    border-bottom: 3px solid transparent;
    border-bottom: 0.2rem solid transparent; }
    #uw-top-menus .uw-nav-menu a:hover {
      text-decoration: none;
      border-bottom-color: white; }
    #uw-top-menus .uw-nav-menu a:active, #uw-top-menus .uw-nav-menu a:focus {
      text-decoration: none; }
  #uw-top-menus .uw-nav-menu li {
    list-style: none; }
  #uw-top-menus .uw-nav-menu li.uw-search-form {
    margin-top: 16px;
    margin-top: 1rem; }
  #uw-top-menus .uw-nav-menu ul {
    padding: 0 16px;
    padding: 0 1rem;
    line-height: 1.625; }
    #uw-top-menus .uw-nav-menu ul ul {
      margin: 0; }
      #uw-top-menus .uw-nav-menu ul ul a {
        font-weight: 700;
        text-transform: none; }
  #uw-top-menus .uw-nav-menu li {
    margin-bottom: 0; }
  #uw-top-menus .uw-nav-menu ul ul {
    display: none;
    -webkit-transform: scaleY(0);
        -ms-transform: scaleY(0);
            transform: scaleY(0);
    -webkit-transform-origin: top;
        -ms-transform-origin: top;
            transform-origin: top;
    opacity: 0;
    -webkit-transition: transformY .2s ease-in-out, opacity .2s ease-in-out;
    transition: transformY .2s ease-in-out, opacity .2s ease-in-out;
    padding-bottom: 8px;
    padding-bottom: .5rem; }
  #uw-top-menus .uw-nav-menu ul li.uw-dropdown.uw-is-active > ul {
    display: block;
    opacity: 1.0;
    -webkit-transform: scaleY(1);
        -ms-transform: scaleY(1);
            transform: scaleY(1);
    -webkit-animation: reveal .2s ease-in-out;
            animation: reveal .2s ease-in-out; }
  #uw-top-menus .uw-nav-menu ul ul ul {
    display: none;
    left: 100%;
    top: 0; }
  #uw-top-menus .uw-nav-menu svg.uw-caret {
    width: 16px;
    width: 1rem;
    height: 16px;
    height: 1rem;
    fill: white;
    vertical-align: text-top;
    display: inline;
    margin-right: -16px;
    margin-right: -1rem; }
    #uw-top-menus .uw-nav-menu svg.uw-caret:last-child {
      display: none; }
  #uw-top-menus .uw-nav-menu .uw-is-active svg.uw-caret {
    display: none; }
    #uw-top-menus .uw-nav-menu .uw-is-active svg.uw-caret:last-child {
      display: inline; }
  #uw-top-menus .uw-nav-menu.uw-nav-menu-reverse svg.uw-caret, #uw-top-menus .uw-nav-menu.uw-nav-menu-secondary-reverse svg.uw-caret {
    fill: #c5050c; }

#uw-top-menus.uw-horizontal .uw-nav-menu {
  -webkit-font-smoothing: antialiased;
  clear: both;
  margin: 0 auto;
  width: 100%;
  background-color: #c5050c; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse {
    -webkit-font-smoothing: auto;
    background-color: white; }

#uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary {
  -webkit-font-smoothing: antialiased;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 20;
  margin-bottom: 0;
  background-color: transparent;
  width: auto;
  display: inline-block; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary > ul > li {
    float: right; }
    #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary > ul > li > a {
      font-weight: 700;
      font-size: 13px;
      font-size: .825rem;
      line-height: 35px;
      line-height: 2.2rem;
      border-bottom: none;
      padding-top: 0;
      padding-bottom: 0;
      margin-bottom: 0; }
      #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary > ul > li > a:hover {
        border-bottom: none; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary.uw-nav-menu-secondary-reverse a {
    color: #646569; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-secondary.uw-nav-menu-secondary-reverse ul ul a:hover {
    border-bottom: 3px solid #c5050c;
    border-bottom: 0.2rem solid #c5050c; }

#uw-top-menus.uw-horizontal .uw-nav-menu ul {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
     -moz-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  margin: 0 auto;
  max-width: 62.5em; }

#uw-top-menus.uw-horizontal .uw-nav-menu li {
  display: table-cell;
  position: relative;
  vertical-align: middle;
  padding: 0 15px;
  padding: 0 .95rem; }

#uw-top-menus.uw-horizontal .uw-nav-menu li li {
  display: block;
  padding: 8px 8px;
  padding: .5rem .5rem;
  line-height: 1;
  text-align: left; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li {
  text-align: center; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li > a {
  padding: 16px 0 1px;
  padding: 1.05rem 0 0.1rem;
  margin-bottom: 12px;
  margin-bottom: .8rem; }

#uw-top-menus.uw-horizontal .uw-nav-menu ul li.uw-dropdown > ul {
  background-color: #c5050c; }

#uw-top-menus.uw-horizontal .uw-nav-menu-reverse ul li.uw-dropdown > ul, #uw-top-menus.uw-horizontal .uw-nav-menu-reverse .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul, #uw-top-menus.uw-horizontal .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul, #uw-top-menus.uw-horizontal .uw-nav-menu-secondary-reverse .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul {
  background-color: white; }
  #uw-top-menus.uw-horizontal .uw-nav-menu-reverse ul li.uw-dropdown > ul a, #uw-top-menus.uw-horizontal .uw-nav-menu-reverse .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul a, #uw-top-menus.uw-horizontal .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul a, #uw-top-menus.uw-horizontal .uw-nav-menu-secondary-reverse .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul a {
    color: #282728;
    background-color: transparent; }

#uw-top-menus.uw-horizontal .uw-nav-menu-reverse ul li.uw-dropdown > ul {
  -webkit-box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); }

#uw-top-menus.uw-horizontal .uw-nav-menu-reverse-flat ul li.uw-dropdown > ul, #uw-top-menus.uw-horizontal .uw-nav-menu-secondary-reverse ul li.uw-dropdown > ul {
  -webkit-box-shadow: none;
          box-shadow: none;
  border-left: 1px solid #cfcfcf;
  border-right: 1px solid #cfcfcf;
  border-bottom: 1px solid #cfcfcf; }

#uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse ul ul .uw-dropdown > a {
  color: #c5050c; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li.uw-dropdown > a, #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li.uw-dropdown > a {
  padding-right: 16px;
  padding-right: 1rem; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li.uw-dropdown.uw-is-active > ul {
  display: block; }

#uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse a {
  color: #282728;
  font-weight: 700; }

#uw-top-menus.uw-horizontal .uw-nav-menu ul ul {
  position: absolute;
  left: 0;
  width: 188px;
  z-index: 99999;
  display: none; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li:first-child {
  padding-left: 0; }

#uw-top-menus.uw-horizontal .uw-nav-menu > ul > li.current-menu-item > a, #uw-top-menus.uw-horizontal .uw-nav-menu > ul > li.current-menu-parent > a {
  border-bottom-color: white; }

#uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse {
  -webkit-font-smoothing: auto;
  border-top: 1px solid #cfcfcf;
  border-bottom: 1px solid #cfcfcf; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li:first-child {
    padding-left: 0; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li > a {
    padding: 4px 0 1px;
    padding: .3rem 0 .1rem;
    margin-bottom: 12px;
    margin-bottom: .8rem;
    margin-top: 12px;
    margin-top: .8rem;
    border-bottom: 3px solid transparent;
    border-bottom: .2rem solid transparent; }
    #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li > a:hover {
      border-bottom: 3px solid #c5050c;
      border-bottom: 0.2rem solid #c5050c; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li > a + ul > li > a:hover {
    border-bottom: 3px solid #c5050c;
    border-bottom: 0.2rem solid #c5050c; }
  #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li.current-menu-item > a, #uw-top-menus.uw-horizontal .uw-nav-menu.uw-nav-menu-reverse > ul > li.current-menu-parent > a {
    border-bottom: 3px solid #c5050c;
    border-bottom: 0.2rem solid #c5050c; }

#uw-top-menus.uw-horizontal .uw-nav-menu ul ul a {
  display: inline;
  margin-bottom: 0;
  padding-bottom: 0;
  height: auto;
  width: 168px; }

#uw-top-menus.uw-stacked .uw-nav-menu {
  background-color: #f2f2f2; }
  #uw-top-menus.uw-stacked .uw-nav-menu a {
    color: #282728; }
    #uw-top-menus.uw-stacked .uw-nav-menu a:hover {
      border-bottom-color: #cfcfcf;
      background-color: #e8e8e8; }
  #uw-top-menus.uw-stacked .uw-nav-menu ul {
    margin: 0;
    padding-top: 8px;
    padding-top: .5rem;
    padding-bottom: 8px;
    padding-bottom: .5rem;
    padding: 0;
    display: block; }
    #uw-top-menus.uw-stacked .uw-nav-menu ul ul {
      position: static;
      padding: 0;
      display: none; }
      #uw-top-menus.uw-stacked .uw-nav-menu ul ul a {
        font-weight: 400; }
      #uw-top-menus.uw-stacked .uw-nav-menu ul ul ul {
        margin-top: 0; }
  #uw-top-menus.uw-stacked .uw-nav-menu > ul > li {
    display: block;
    text-align: left;
    padding: 0; }
    #uw-top-menus.uw-stacked .uw-nav-menu > ul > li li a {
      padding-left: 32px;
      padding-left: 2rem; }
  #uw-top-menus.uw-stacked .uw-nav-menu > ul > li a {
    padding: 16px;
    padding: 1rem;
    margin-bottom: 0;
    margin-top: 0;
    display: block;
    border: none;
    border-bottom: 1px solid #cfcfcf; }
  #uw-top-menus.uw-stacked .uw-nav-menu.uw-nav-menu-secondary {
    border-top: 2px solid #cfcfcf; }
    #uw-top-menus.uw-stacked .uw-nav-menu.uw-nav-menu-secondary li a {
      text-transform: none;
      font-weight: 400; }
  #uw-top-menus.uw-stacked .uw-nav-menu svg.uw-caret {
    color: #c5050c;
    fill: #c5050c;
    width: 16px;
    width: 1rem;
    height: 16px;
    height: 1rem;
    vertical-align: -3px;
    vertical-align: -.2rem; }

#test-get-computed-style-width {
  width: 100px;
  padding: 10px;
  display: inline-block;
  position: absolute;
  bottom: 0; }

.uw-footer {
  -webkit-font-smoothing: antialiased;
  clear: both;
  background-color: #282728;
  border-top: 5px solid #c5050c;
  color: #adadad; }
  .uw-footer a {
    color: #adadad; }
    .uw-footer a:hover {
      color: #f7f7f7; }

.uw-footer-content {
  padding-top: 32px;
  padding-top: 2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  max-width: 1200px;
  margin: 0 auto; }
  .uw-footer-content > div {
    -webkit-box-flex: 1;
    -webkit-flex: 1 0 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 0 100%;
            flex: 1 0 100%;
    max-width: 100%;
    padding: 0 32px;
    padding: 0 2rem;
    text-align: center; }
    .uw-footer-content > div.uw-logo {
      padding-bottom: 32px;
      padding-bottom: 2rem;
      text-align: center; }
  .uw-footer-content ul {
    margin-left: 0;
    margin-bottom: 32px;
    margin-bottom: 2rem; }
  .uw-footer-content p, .uw-footer-content li {
    font-size: 14px;
    font-size: .9rem;
    margin: 0 0 8px;
    margin: 0 0 .5rem;
    line-height: 1.25;
    list-style: none; }
  @media screen and (min-width: 40em) {
    .uw-footer-content > div {
      -webkit-box-flex: 1;
      -webkit-flex: 1 0 33.333%;
         -moz-box-flex: 1;
          -ms-flex: 1 0 33.333%;
              flex: 1 0 33.333%;
      max-width: 33.333%;
      padding: 0 32px;
      padding: 0 2rem;
      text-align: center; }
      .uw-footer-content > div.uw-logo:nth-last-child(2):nth-child(1) {
        -webkit-flex-basis: 50%;
            -ms-flex-preferred-size: 50%;
                flex-basis: 50%;
        max-width: 50%;
        text-align: right; }
      .uw-footer-content > div:nth-last-child(1):nth-child(2) {
        -webkit-flex-basis: 50%;
            -ms-flex-preferred-size: 50%;
                flex-basis: 50%;
        max-width: 50%;
        text-align: left; }
      .uw-footer-content > div.uw-logo:nth-last-child(3):nth-child(1) {
        -webkit-flex-basis: 33.333333%;
            -ms-flex-preferred-size: 33.333333%;
                flex-basis: 33.333333%;
        max-width: 33.333333%;
        text-align: right; }
      .uw-footer-content > div:nth-last-child(2):nth-child(2) {
        -webkit-flex-basis: 33.333333%;
            -ms-flex-preferred-size: 33.333333%;
                flex-basis: 33.333333%;
        max-width: 33.333333%;
        text-align: left; }
      .uw-footer-content > div:nth-last-child(1):nth-child(3) {
        -webkit-flex-basis: 33.333333%;
            -ms-flex-preferred-size: 33.333333%;
                flex-basis: 33.333333%;
        max-width: 33.333333%;
        text-align: left; }
    .uw-footer-content .uw-logo {
      -webkit-box-flex: 0;
      -webkit-flex: 0 1 100%;
         -moz-box-flex: 0;
          -ms-flex: 0 1 100%;
              flex: 0 1 100%;
      max-width: 100%;
      padding-bottom: 32px;
      padding-bottom: 2rem; }
    .uw-footer-content p, .uw-footer-content li {
      font-size: 17px;
      font-size: 1.1rem;
      margin-bottom: 12px;
      margin-bottom: .75rem; } }
  @media screen and (min-width: 60.75em) {
    .uw-footer-content {
      padding-top: 64px;
      padding-top: 4rem; }
      .uw-footer-content > div {
        -webkit-box-flex: 1;
        -webkit-flex: 1 0 25%;
           -moz-box-flex: 1;
            -ms-flex: 1 0 25%;
                flex: 1 0 25%;
        max-width: 25%;
        padding: 0 32px;
        padding: 0 2rem;
        text-align: left; }
      .uw-footer-content .uw-logo {
        -webkit-flex-basis: 25%;
            -ms-flex-preferred-size: 25%;
                flex-basis: 25%;
        max-width: 25%; } }

.uw-footer-menu ul ul {
  margin: 12px 0;
  margin: .75rem 0; }

.uw-logo {
  padding-bottom: 26px;
  padding-bottom: 1.625rem; }
  .uw-logo a svg {
    width: 200px;
    height: 150px;
    min-width: 175px;
    fill: #adadad;
    color: #adadad; }
  .uw-logo a:hover svg {
    fill: #f7f7f7;
    color: #f7f7f7; }

.uw-footer-header {
  color: #adadad;
  font-weight: 800;
  font-size: 14px;
  font-size: .9rem;
  line-height: 1.25;
  margin: 0 0 16px;
  margin: 0 0 1rem; }
  @media screen and (min-width: 60.75em) {
    .uw-footer-header {
      font-size: 19px;
      font-size: 1.2rem; } }

.uw-footer-contact {
  text-align: center; }

.uw-contact-list {
  margin-left: 0; }

.uw-contact-item {
  list-style: none;
  margin-bottom: 12px;
  margin-bottom: .75rem;
  line-height: 1.25; }

[class="uw-contact-item"] > a {
  text-decoration: underline; }

.uw-map-marker, .uw-footer-icon {
  width: 16px;
  width: 1rem;
  height: 16px;
  height: 1rem;
  vertical-align: -2px;
  fill: #adadad; }
  .uw-map-marker:hover, .uw-footer-icon:hover {
    fill: #f7f7f7; }

.uw-copyright {
  line-height: 2.2em;
  padding: 32px 0.5em 16px;
  padding: 2rem 0.5em 1rem;
  text-align: center; }
  .uw-copyright p {
    margin: 0;
    font-size: 14px;
    font-size: .925rem;
    line-height: 1.2; }
    .uw-copyright p a {
      text-decoration: underline; }

.uw-social-icons {
  margin-top: 16px;
  margin-top: 1rem;
  margin-left: 0; }
  .uw-social-icons .uw-social-icon {
    display: inline-block;
    margin: 0 8px;
    margin: 0 .5rem; }
    .uw-social-icons .uw-social-icon:first-child {
      margin-left: 0; }
  .uw-social-icons a {
    display: inline-block;
    background-color: #adadad;
    padding: 6px;
    padding: 0.4rem;
    font-size: 20px;
    font-size: 1.3rem;
    line-height: 20px;
    line-height: 1.3rem;
    -webkit-border-radius: 1.05rem;
            border-radius: 1.05rem; }
    .uw-social-icons a:hover {
      background-color: #f7f7f7; }
  .uw-social-icons svg {
    display: inline-block;
    vertical-align: top;
    width: 20px;
    width: 1.3rem;
    height: 20px;
    height: 1.3rem;
    margin: 0;
    padding: 0;
    fill: #282728; }

.uw-button {
  background-color: #0479a8;
  color: white;
  display: inline-block;
  line-height: 1;
  cursor: pointer;
  -webkit-transition: all .2s ease-out;
  transition: all .2s ease-out;
  border: 1px solid transparent;
  -webkit-border-radius: 0;
          border-radius: 0;
  position: relative;
  padding: 9px;
  padding: .6rem;
  font-family: "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 12px;
  font-size: .775rem;
  font-weight: 700;
  text-transform: uppercase; }
  .uw-button:hover {
    background-color: #03678f; }
  .uw-button.uw-button-inverse {
    background-color: white;
    color: #0479a8;
    border-color: #0479a8; }
  .uw-button + .uw-button {
    margin-left: 8px;
    margin-left: 0.5rem; }

a.uw-button:hover {
  text-decoration: none; }

.uw-button-unstyle {
  background-color: transparent;
  color: #0479a8; }

.uw-pagination {
  background-color: #e4e4e4;
  padding: 0 16px;
  padding: 0 1rem; }

.uw-pagination-prev-next {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
     -moz-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-box-align: center;
  -webkit-align-items: center;
     -moz-box-align: center;
      -ms-flex-align: center;
          align-items: center; }
  .uw-pagination-prev-next > [class*="uw-pagination"] {
    display: inline-block; }

.uw-breadcrumbs {
  margin: 16px 0;
  margin: 1rem 0;
  padding: 0 16px;
  padding: 0 1rem;
  max-width: 62.5em;
  margin-left: auto;
  margin-right: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }
  .uw-breadcrumbs ul {
    margin-left: 0; }
  .uw-breadcrumbs li {
    list-style: none;
    text-transform: uppercase;
    float: left;
    color: black;
    font-size: 12px;
    font-size: .7875rem;
    margin-bottom: 0; }
  .uw-breadcrumbs li:not(:last-child)::after {
    color: #646569;
    content: "/";
    margin: 0 8px;
    margin: 0 .5rem;
    position: relative; }

/* Global Reset Styles ------------------ */
input,
textarea,
select,
option,
optgroup,
legend,
fieldset {
  font-size: 16px;
  font-size: 1rem;
  color: #494949;
  vertical-align: top;
  display: block;
  margin: 0; }

datalist {
  font-size: 16px;
  font-size: 1rem; }

label {
  display: block;
  margin: 0; }

.uw-input-row {
  margin: 0 0 16px 0;
  margin: 0 0 1rem 0; }

/* Input & Textarea ------------------ */
/* Fields with standard width */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="color"],
input[type="date"],
input[type="datetime-local"],
input[type="month"],
input[type="number"],
input[type="tel"],
input[type="time"],
input[type="url"],
input[type="week"],
input[list],
input[type="file"],
select,
textarea {
  width: 100%;
  max-width: 100%;
  padding: 8px;
  padding: 0.5rem;
  background-color: #fff;
  -webkit-border-radius: 0px;
          border-radius: 0px;
  border: 1px solid #c8c8c8; }

/* Fields with standard height */
input[type="text"],
input[type="email"],
input[type="password"],
input[type="search"],
input[type="color"],
input[type="date"],
input[type="datetime-local"],
input[type="month"],
input[type="number"],
input[type="tel"],
input[type="time"],
input[type="url"],
input[type="week"],
input[list] {
  height: 40px;
  height: 2.5rem; }

/* Other */
textarea {
  overflow: auto; }

input[type="range"] {
  height: 40px;
  height: 2.5rem;
  width: 100%;
  max-width: 100%; }

input[type="file"] {
  min-height: 40px;
  min-height: 2.5rem; }

input[type="search"] {
  height: 40px;
  height: 2.5rem; }

input[type="checkbox"],
input[type="radio"] {
  display: inline-block;
  vertical-align: 1px;
  vertical-align: .1rem;
  margin: 0 1px;
  margin: 0 .1rem; }

/* Select ------------------ */
select {
  height: 40px;
  height: 2.5rem; }

select[multiple] {
  height: auto;
  min-height: 40px;
  min-height: 2.5rem;
  padding: 0; }
  select[multiple] option {
    margin: 0;
    padding: 8px;
    padding: 0.5rem; }

/* Fieldset ------------------ */
fieldset {
  padding: 10px 25px;
  -webkit-border-radius: 0px;
          border-radius: 0px;
  border: 1px solid #c8c8c8;
  margin-bottom: 16px;
  margin-bottom: 1rem; }

legend {
  padding: 0 5px;
  font-weight: 700; }

/* Buttons, Input Type Submit/Reset ------------------ */
input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="image"] {
  height: 40px;
  width: 100%;
  max-width: inherit;
  background-color: #0479a8;
  padding: 8px;
  padding: 0.5rem;
  cursor: pointer;
  color: #fff;
  font-weight: 700;
  font-family: "Verlag", "Helvetica Neue", Helvetica, Arial, sans-serif;
  -webkit-border-radius: 0px;
          border-radius: 0px;
  border: 1px solid #c8c8c8;
  text-transform: uppercase;
  -webkit-font-smoothing: antialiased; }

input[type="image"] {
  text-align: center;
  padding: 8px;
  padding: 0.5rem; }

/* States ------------------ */
input[disabled],
textarea[disabled],
select[disabled],
option[disabled] {
  cursor: not-allowed; }

input:focus,
textarea:focus,
select:focus,
option:focus {
  background-color: inherit;
  border-color: #c8c8c8; }

input[type="checkbox"]:focus,
input[type="radio"]:focus {
  outline: #c8c8c8 solid 2px; }

input[type="button"]:hover,
input[type="submit"]:hover,
input[type="reset"]:hover,
input[type="button"]:focus,
input[type="submit"]:focus,
input[type="reset"]:focus {
  background-color: #03678f;
  color: #fff; }

table {
  width: 100%;
  margin-bottom: 32px;
  margin-bottom: 2rem;
  border-collapse: separate;
  border-spacing: 0;
  border: 1px solid #dbdbdb; }

tfoot, thead {
  background: #f7f7f7;
  color: #494949;
  border: 1px solid #e4e4e4; }

caption {
  font-weight: 700;
  text-align: center;
  margin-top: 16px;
  margin-top: 1rem;
  margin-bottom: 8px;
  margin-bottom: 0.5rem; }

tbody {
  border: 1px solid #e4e4e4;
  background-color: #fff; }

tr {
  background-color: transparent; }

table tbody tr:nth-child(even) {
  background-color: #f7f7f7; }

th, td {
  padding: 16px;
  padding: 1rem;
  line-height: 1.35; }

th {
  text-transform: uppercase;
  font-weight: 700;
  font-size: 16px;
  font-size: 1rem; }

td {
  font-size: 18px;
  font-size: 1.125rem; }

.uw-side-nav {
  background-color: #fff;
  border-bottom: 4px solid #c5050c;
  padding: 24px 32px 24px 32px;
  padding: 1.5rem 2rem 1.5rem 2rem;
  background-color: #f7f7f7;
  padding: 0;
  border-left: none;
  border-right: none !important; }
  @media screen and (min-width: 40em) {
    .uw-side-nav {
      border-right: 1px solid #cfcfcf; } }
  .uw-side-nav + div {
    margin-top: 32px;
    margin-top: 2rem; }
    @media screen and (min-width: 40em) {
      .uw-side-nav + div {
        margin-top: 64px;
        margin-top: 4rem; } }
  .uw-side-nav ul {
    margin-left: 0; }
  .uw-side-nav li {
    position: relative;
    margin-bottom: 0;
    list-style: none;
    border-bottom: 1px solid #e4e4e4;
    -webkit-transition: .25s border-left ease-in;
    transition: .25s border-left ease-in;
    font-size: 16px;
    font-size: 1rem;
    font-weight: 700;
    line-height: 1.35; }
    .uw-side-nav li a {
      display: block;
      padding: 16px;
      padding: 1rem;
      position: relative; }
    .uw-side-nav li ul {
      margin-top: 0;
      margin-left: 32px;
      margin-left: 2rem;
      margin-bottom: 8px;
      margin-bottom: .5rem; }
      .uw-side-nav li ul li {
        font-weight: 400;
        border-bottom: 1px solid transparent; }
        .uw-side-nav li ul li a {
          padding: 8px 16px;
          padding: 0.5rem 1rem;
          line-height: 1; }
          .uw-side-nav li ul li a.uw-current-menu-item, .uw-side-nav li ul li a:hover {
            color: #c5050c; }
        .uw-side-nav li ul li:first-child > a {
          padding-top: 0; }
  .uw-side-nav > ul > li > a {
    border-left: 4px solid transparent;
    border-left: .25rem solid transparent; }
    .uw-side-nav > ul > li > a.uw-current-menu-item, .uw-side-nav > ul > li > a:hover {
      border-left: 4px solid #c5050c;
      border-left: 0.25rem solid #c5050c;
      color: #c5050c; }

body.uw-light-gray-bg .uw-side-nav {
  background-color: #fff;
  border: 1px solid #e4e4e4; }

.uw-side-nav-ui {
  text-align: right; }

.uw-side-nav-button {
  display: none;
  background-color: transparent;
  border-bottom: 0;
  padding: 6px 6px 6px;
  position: absolute;
  left: 16px;
  left: 1rem;
  top: -12px;
  top: -0.75rem;
  width: -webkit-calc(100% - 2rem);
  width: calc(100% - 2rem);
  text-align: left;
  font-size: 11px;
  font-size: .7rem;
  font-family: verdana;
  line-height: 1; }
  .uw-side-nav-button .uw-side-nav {
    display: none; }
  .uw-side-nav-button svg {
    width: 16px;
    width: 1rem;
    height: 16px;
    height: 1rem;
    fill: #0479a8;
    vertical-align: -4px; }

.uw-side-nav-button {
  display: none; }
  .uw-side-nav-button:focus {
    outline: none; }

.uw-side-nav-is-hidden .uw-side-nav {
  max-height: 0;
  overflow: hidden;
  -webkit-transition: 0.25s max-height ease-in;
  transition: 0.25s max-height ease-in;
  border-bottom: none; }

.uw-side-nav-is-hidden .uw-side-nav-button {
  background-color: #f7f7f7;
  -webkit-box-shadow: none;
          box-shadow: none;
  -webkit-transition: .25s box-shadow ease-in;
  transition: .25s box-shadow ease-in;
  border: 1px solid #aec2ca; }
  .uw-side-nav-is-hidden .uw-side-nav-button svg {
    -webkit-transform: rotate(0deg);
        -ms-transform: rotate(0deg);
            transform: rotate(0deg);
    -webkit-transition: 0.25s transform ease-in;
    transition: 0.25s transform ease-in; }
  .uw-side-nav-is-hidden .uw-side-nav-button:focus {
    border-color: #0479a8;
    -webkit-box-shadow: 0 0 4px rgba(0, 0, 154, 0.5);
            box-shadow: 0 0 4px rgba(0, 0, 154, 0.5); }

.uw-overlay {
  position: absolute;
  background-color: transparent;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  z-index: -1;
  -webkit-transition: 0.25s background-color ease-in;
  transition: 0.25s background-color ease-in; }
  .uw-overlay.uw-is-active {
    position: absolute;
    z-index: 1;
    background-color: rgba(0, 0, 0, 0.3); }

@media (max-width: 40rem) {
  .uw-side-nav {
    margin-top: 27px;
    margin-top: 1.7rem;
    position: absolute;
    width: -webkit-calc(100% - 2rem);
    width: calc(100% - 2rem);
    top: 2px;
    left: 16px;
    left: 1rem;
    max-height: 800px;
    -webkit-transition: 0.25s max-height ease-in;
    transition: 0.25s max-height ease-in;
    border-bottom: 4px solid #c5050c;
    border-bottom: 0.25rem solid #c5050c;
    z-index: 20;
    -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
            box-shadow: 0 0 4px rgba(0, 0, 0, 0.3); }
  body.uw-light-gray-bg .uw-side-nav {
    border: none; }
  .uw-side-nav-button {
    display: block;
    z-index: 10;
    top: 4px;
    top: 0.25rem;
    -webkit-box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
            box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);
    background-color: #f7f7f7;
    border: 1px solid transparent; }
    .uw-side-nav-button svg {
      -webkit-transform: rotate(180deg);
          -ms-transform: rotate(180deg);
              transform: rotate(180deg);
      -webkit-transition: 0.25s transform ease-in;
      transition: 0.25s transform ease-in; }
    .uw-side-nav-button:focus {
      border-color: #0479a8;
      -webkit-box-shadow: 0 0 4px rgba(0, 0, 154, 0.5);
              box-shadow: 0 0 4px rgba(0, 0, 154, 0.5); }
  .uw-sidebar {
    margin-bottom: 0;
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
       -moz-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2; }
  .uw-body.uw-body {
    padding-top: 48px;
    padding-top: 3rem; } }

.uw-card {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  max-width: 100%;
  padding: 16px;
  padding: 1rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex; }
  @media screen and (min-width: 31.25em) {
    .uw-card {
      -webkit-flex-basis: 33.333333%;
          -ms-flex-preferred-size: 33.333333%;
              flex-basis: 33.333333%;
      max-width: 33.333333%; } }
  .uw-card .uw-card-content {
    background-color: #fff; }
    .uw-card .uw-card-content img {
      width: 100%; }
  .uw-card .uw-card-copy {
    padding: 0 16px 16px;
    padding: 0 1rem 1rem; }

.uw-row {
  max-width: 62.5em;
  margin-left: auto;
  margin-right: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  position: relative; }

.uw-full-row-has-bg-img {
  background-repeat: none;
  background-size: cover; }

.uw-row-page-title {
  padding-top: 32px;
  padding-top: 2rem;
  padding-bottom: 32px;
  padding-bottom: 2rem; }

.uw-col {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  max-width: 100%;
  padding: 0 16px;
  padding: 0 1rem; }
  @media screen and (min-width: 40em) {
    .uw-col {
      -webkit-flex-basis: 100%;
          -ms-flex-preferred-size: 100%;
              flex-basis: 100%;
      max-width: 100%; } }

.uw-body {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  max-width: 100%; }
  @media screen and (min-width: 40em) {
    .uw-body {
      -webkit-flex-basis: 66.6667%;
          -ms-flex-preferred-size: 66.6667%;
              flex-basis: 66.6667%;
      max-width: 66.6667%; } }
  .uw-body p, .uw-body li, .uw-body dd, .uw-body dt {
    font-family: Georgia, Times New Roman, Times, serif;
    -webkit-font-smoothing: auto; }
  .uw-body:first-child:last-child {
    -webkit-flex-basis: 100%;
        -ms-flex-preferred-size: 100%;
            flex-basis: 100%;
    max-width: 100%;
    padding-top: 0; }
    @media screen and (min-width: 40em) {
      .uw-body:first-child:last-child {
        -webkit-flex-basis: 100%;
            -ms-flex-preferred-size: 100%;
                flex-basis: 100%;
        max-width: 100%; } }
  .uw-body h2.uw-mini-bar {
    margin-top: 51px;
    margin-top: 3.2rem; }

.uw-sidebar {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  max-width: 100%;
  margin-bottom: 48px;
  margin-bottom: 3rem; }
  @media screen and (min-width: 40em) {
    .uw-sidebar {
      -webkit-flex-basis: 33.3333%;
          -ms-flex-preferred-size: 33.3333%;
              flex-basis: 33.3333%;
      max-width: 33.3333%; } }

.uw-sidebar-box {
  background-color: #fff;
  border-bottom: 4px solid #c5050c;
  padding: 16px 20px;
  padding: 1rem 1.25rem; }
  @media screen and (min-width: 40em) {
    .uw-sidebar-box {
      border-right: 1px solid #cfcfcf; } }
  .uw-sidebar-box > h3 {
    position: relative;
    margin-top: 35px;
    margin-top: 2.2rem; }
    .uw-sidebar-box > h3:before {
      position: absolute;
      left: 0;
      height: 4px;
      content: '';
      width: 32px;
      width: 2rem;
      top: -12px;
      background-color: #c5050c; }
  .uw-sidebar-box > p, .uw-sidebar-box li {
    margin-bottom: 21px;
    margin-bottom: 1.35rem;
    line-height: 1.35; }
  @media screen and (min-width: 40em) {
    .uw-sidebar-box {
      border-top: 1px solid #cfcfcf;
      border-left: 1px solid #cfcfcf; } }
/*# sourceMappingURL=data:application/json;base64, */